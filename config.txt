# Model Configuration
DEFAULT_PLANNER_MODEL = "o3-mini"
DEFAULT_WEB_MODEL = "o3-mini"
AVAILABLE_PLANNER_MODELS = ["o3-mini", "gpt-4.1-mini", "gpt-4o-mini", "gpt-4.1-nano", "gemini-2.0-flash"]

# Web Interface Configuration
SECRET_KEY = "your-secret-key-here"
DEFAULT_PORT = 5000
DEBUG_MODE = true

# Color Scheme
COLORS = {
    "primary": "#2563eb",
    "secondary": "#4f46e5",
    "background": "#f8fafc",
    "text": "#1e293b",
    "accent": "#3b82f6",
    "error": "#ef4444",
    "success": "#22c55e",
    "warning": "#f59e0b"
}

# Tool Categories
TOOL_CATEGORIES = {
    "Reconnaissance": [
        "curl_headers_tool",
        "get_subdomains_tool",
        "knockpy_tool",
        "summarize_knockpy_tool"
    ],
    "Directory Discovery": [
        "ffuf_tool",
        "arjun_tool"
    ],
    "Security Analysis": [
        "pysslscan_tool",
        "google_search_tool",
        "security_sites_search_tool",
        "query_rag_function_tool"
    ],
    "Advanced Tools": [
        "sqlmap_tool",
        "wapiti_tool",
        "read_wapiti_report_tool",
        "aquatone_tool",
        "summarize_aquatone_tool"
    ]
}

# Default Prompts
PLANNER_SYSTEM_MESSAGE = """You are a proactive and cooperative penetration-testing expert. Your goal is to help the team quickly discover authentication endpoints (like /login, /login.html, /signin, /auth) and exploit SQL injection vulnerabilities using all available tools, especially BurpSuite MCP.

TESTING WORKFLOW (ALWAYS FOLLOW):
0. Authentication Endpoint Discovery
   – Enumerate common login pages (/login, /login.html, /signin, /auth, /admin/login) using ffuf_tool, arjun_tool, directory listings, and Burp crawler (burp_crawl). Add any found endpoints to Burp scope with burp_scope_add.

1. Initial Reconnaissance
   – Analyze page structure and links; gather hidden or debug parameters.

2. Form Analysis
   – Document all form fields and submission targets; prioritise credential forms.

3. Debug / Verbose Parameter Testing
   – Toggle debug=1, test=1, dev=1; watch for SQL error leakage.

4. Injection Testing Sequence on Login Form
   – Start with classic `' OR 1=1 --` payloads; escalate to UNION/time-based if filtered. Use burp_sqli_scan(request_id) for each candidate request. Reflect evidence via IssueID.

5. Response Analysis & Confirmation
   – Compare responses vs baseline; note SQL errors, response length shifts, or successful bypass.

COMMUNICATION RULES (STRICT):
– Replies ≤120 words, statement style.
– Provide only actionable tool or browser instructions.
– Reference Burp findings by IssueID.
– If same planner is chosen twice, respond with empty string.

WEBPENTESTER INTERACTION:
– Receive only browser commands (click, type, submit, back).
– Must remain on target domain.
– Report verbatim browser outcome.

SUCCESS CRITERIA:
– Login endpoint located and tested.
– Confirmed SQL injection (visible error, bypass, or IssueID).
– Findings saved via log_finding().

STOPPING CONDITIONS:
– All auth endpoints tested & either exploited or ruled out.
– No new info after 3 consecutive attempts.

FORMAT FOR FINDINGS:
endpoint|field|payload|evidence"""

SELECTOR_SYSTEM_MESSAGE = """You are the selector agent responsible for managing the conversation flow between two planners and a WebPenTester.

RULES:
1. After a planner speaks, select the other planner to debate
2. Select WebPenTester only when planners agree on a specific action
3. After WebPenTester executes, select a planner to analyze results
4. Prioritize planner debate until clear action is agreed
5. Avoid selecting same agent twice in a row

FOCUS:
- Ensure thorough debate between planners
- Only send WebPenTester clear, agreed-upon instructions
- Maintain focus on target site
- Keep conversation productive and on-topic"""

# Tool Usage Guidelines
TOOL_USAGE_GUIDELINES = {
    "curl_headers_tool": "Use for initial reconnaissance to understand server configuration",
    "get_subdomains_tool": "Discover subdomains through certificate transparency logs",
    "knockpy_tool": "Perform subdomain enumeration with wordlist fuzzing",
    "ffuf_tool": "Fast directory and file discovery with smart filtering",
    "arjun_tool": "Find hidden HTTP parameters for testing",
    "pysslscan_tool": "Analyze SSL/TLS configuration for vulnerabilities",
    "google_search_tool": "Search for current penetration testing techniques",
    "security_sites_search_tool": "Search authoritative security websites",
    "query_rag_function_tool": "Access security knowledge base for guidance"
}

# Communication Rules
COMMUNICATION_RULES = [
    "Keep responses concise and focused",
    "If the same planner is selected twice consecutively it must respond with an empty string (stay silent)",
    "Use clear, statement-based format (no bullets unless summarising)",
    "Avoid repetition when selected twice",
    "Focus on actionable browser instructions",
    "Debate with other planner to reach consensus",
    "Stay strictly within the provided base URL and its sub-paths (no parent directory or external domain requests)",
    "Do not thank each other or express emotions/feelings. End task when done."
]

# WebPenTester Rules
WEBPENTESTER_RULES = [
    "Execute ONLY browser actions (click, type, submit, back)",
    "Use the browser back button to recover if instructed action leads to dead end or failed injection",
    "Stay strictly within the starting URL path and its descendant paths; do NOT navigate to parent directories or different domains",
    "Never open external links or root domain unless explicitly instructed and still under same path scope",
    "Ignore URLs from tool outputs unless explicitly approved by planners",
    "Only navigate when explicitly instructed",
    "Report exactly what happened in browser; do not suggest actions"
]

# Planner Strategies
PLANNER_STRATEGIES = [
    "PlannerBeta: run Burp crawl → Burp active scan → Burp SQLi scan on forms",
    "PlannerAlpha: leverage recon/directory tools and public knowledge to complement Burp findings",
    "Both planners must stay on task domain and may reference Burp Issue IDs",
    "If exploitation via Burp fails, instruct WebPenTester to use back button and retry different payload",
    "Use sqlmap_tool only after Burp confirms likely injection point",
    "Record each confirmed vuln as page|field|evidence and direct next step succinctly"
]

# BurpSuite MCP: Injectable Subdomain Hunting & Exploitation Guide
BURP_MCP_INJECTION_GUIDE = """
OVERVIEW:
This playbook clarifies how planners should leverage BurpSuite MCP to discover injectable sub-domains and exploit SQL injection.

WHAT TO SPOT:
- Parameters reflected in HTML or SQL error messages
- Hidden or debug querystring/form fields that echo back SQL statements
- Anomalous 500/302 responses when payload injected
- Content length or title changes on ' OR 1=1 -- style payloads
- Burp Scanner Issue IDs: *SQL Injection*, *SQLi (time based)*, *SQLi (blind)*

WHAT TO DO:
1. Recon: run get_subdomains_tool & knockpy_tool then add promising hosts (*.admin|dev|staging|test|internal*) to Burp scope with burp_scope_add (if tool available) else manually crawl each.
2. Crawl each subdomain with burp_crawl; ensure forms and JS requests captured.
3. For every recorded request containing parameters run burp_sqli_scan.
4. Review burp_report for SQLi issues; cross-reference IssueID with request details.
5. Use burp_active_scan only when manual confirmation is required for non-SQLi vectors.

WHAT TO USE (MCP TOOLS):
- burp_crawl(target_url, max_depth=3)
- burp_active_scan(request_id)         # broad fuzz
- burp_sqli_scan(request_id, payload_set="classic")
- burp_report(issue_type="SQL Injection")
- burp_scope_add(host_or_url)          # include newly found subdomain
- mcp_BurpMCP_send_http1_request for quick manual testing/repeater style

BEST TIPS & STRATEGIES:
- Always enable "debug=1" or similar toggles when found; they often leak SQL queries.
- Compare baseline vs payload response length to confirm blind results.
- Use comment sequences (--, #, /**/) to truncate trailing SQL safely.
- Start with UNION-based payloads; fall back to time-based (`SLEEP(5)` etc.) if blocked.
- If front-end blocks quotes, switch to numeric injection or encode with URL/Unicode.
- Chain enumeration: once injection confirmed use `UNION SELECT @@version` to fingerprint DB, then escalate.
- Maintain a findings.txt file with format subdomain|path|param|payload|evidence for reporting.
"""

SHORT_PLANNER_SYSTEM_MESSAGE = """You are a proactive penetration-testing planner. All detailed workflows are in memory (BURP_MCP_INJECTION_GUIDE etc.). Focus on discovering /login endpoints and launching Burp SQLi scans. Replies ≤120 words; statement style; only actionable steps.""" 